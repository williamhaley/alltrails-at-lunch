{"version":3,"sources":["App/App.module.scss","List/ListItem/Rating.module.scss","Navigation/NavBar.module.scss","List/ListItem/ListItem.module.scss","store/hooks.ts","Google/GoogleProvider.tsx","types.ts","config.ts","Map/Map.tsx","store/slices/places.ts","Navigation/Sort.tsx","Navigation/Search.tsx","Navigation/NavBar.tsx","store/slices/favorites.ts","store/slices/location.ts","store/store.ts","List/ListItem/Rating.tsx","List/ListItem/ListItem.tsx","List/List.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","GoogleContext","createContext","isGoogleLoaded","mapInstance","setMapInstance","SortType","GoogleProvider","children","useState","setIsGoogleLoaded","useEffect","src","callback","script","document","createElement","setAttribute","addEventListener","head","appendChild","loadScript","Provider","value","Map","props","state","coordinates","location","isLoadingPlaces","places","isLoading","currentSelection","setCurrentSelection","useReducer","action","old","new","markerState","updateMarkers","useContext","length","setMap","infoWindowRef","current","content","place","nameElement","textContent","name","placeIdElement","id","getDetailsContent","setContent","open","marker","newMarkers","google","maps","Marker","map","position","LatLng","latitude","longitude","event","addListener","push","mapDivRef","useRef","InfoWindow","center","zoom","className","ref","initialState","sort","RatingsDescending","search","createAsyncThunk","a","service","query","request","keyword","radius","type","Promise","resolve","reject","nearbySearch","results","status","PlacesServiceStatus","OK","ZERO_RESULTS","includes","console","error","Error","warn","reduce","memo","next","geometry","place_id","rating","totalReviews","user_ratings_total","photoUrl","photos","getUrl","maxWidth","maxHeight","priceLevel","price_level","lat","lng","sortPlaces","sortType","b","RatingsAscending","placesSlice","createSlice","reducers","toggleSort","extraReducers","builder","addCase","pending","fulfilled","payload","rejected","actions","sortOptions","text","ModalForm","forwardRef","selection","setSelection","tabIndex","sortOption","index","onChange","checked","onClick","onApply","Sort","dispatch","modalRef","createRef","modal","isLoadingResults","disabled","Modal","toggle","newSortType","Search","setService","PlacesService","onSubmit","preventDefault","alert","formData","FormData","target","get","placeholder","NavBar","styles","nav","href","alt","LOCAL_STORAGE_KEY","loadLocalStorageFavorites","JSON","parse","localStorage","getItem","stringify","byId","favoritesSlice","toggleFavorite","placeId","newState","favorites","setItem","getCurrentLocation","navigator","geolocation","getCurrentPosition","coords","enableHighAccuracy","timeout","maximumAge","locationSlice","increment","decrement","store","configureStore","reducer","locationReducer","placesReducer","favoritesReducer","Rating","fullStars","Math","floor","allStars","i","full","empty","title","star","ListItem","dollars","setDollars","isFavorited","Array","fill","join","item","List","App","mobileShowList","setMobileShowList","container","main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,IAAM,iBAAiB,KAAO,oB,mBCAnFD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,wB,mBCAtDD,EAAOC,QAAU,CAAC,SAAW,2B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,yB,qJCKZC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,OCElDC,EAAgBC,wBAAqB,CAChDC,gBAAgB,EAChBC,YAAa,KACbC,eAAgB,eAUlB,ICNYC,ED8BGC,EAxBkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClC,EAA4CC,oBAAkB,GAA9D,mBAAON,EAAP,KAAuBO,EAAvB,KACA,EAAsCD,mBAAiC,MAAvE,mBAAOL,EAAP,KAAoBC,EAApB,KAaA,OAXAM,qBAAU,WAQR,OAnBJ,SAAoBC,EAAaC,GAC/B,IAAIC,EAASC,SAASC,cAAc,UACpCF,EAAOG,aAAa,MAAOL,GAC3BE,EAAOI,iBAAiB,OAAQL,GAChCE,SAASI,KAAKC,YAAYN,GAQxBO,CAAW,+CAAD,OE1Bc,0CF0Bd,sBAER,WACEX,GAAkB,MAIf,eACN,IAGD,cAACT,EAAcqB,SAAf,CACEC,MAAO,CAAEpB,iBAAgBC,cAAaC,kBADxC,SAGGG,KG4GQgB,EAvH6C,SAACC,GAC3D,MAAiD1B,GAC/C,SAAC2B,GACC,MAAO,CACLC,YAAaD,EAAME,SAASD,YAC5BE,gBAAiBH,EAAMI,OAAOC,UAC9BD,OAAQJ,EAAMI,OAAOA,WALnBH,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,gBAAiBC,EAAtC,EAAsCA,OAUtC,EAAgDrB,mBAC9C,MADF,mBAAOuB,EAAP,KAAyBC,EAAzB,KAGA,EAAqCC,sBACnC,SAACR,EAAoBS,GACnB,MAAO,CACLC,IAAKV,EAAMW,IACXA,IAAKF,KAGT,CAAEC,IAAK,GAAIC,IAAK,KAPlB,mBAAOC,EAAP,KAAoBC,EAApB,KAWA5B,qBAAU,WACJkB,GACFU,EAAc,MAEf,CAACV,IAEJ,MACEW,qBAAWvC,GADLE,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,YAAaC,EAArC,EAAqCA,eAIrCM,qBAAU,WACR,GAAI2B,EAAYF,IAAIK,OAAS,EAAG,CAAC,IAAD,gBACTH,EAAYF,KADH,IAC9B,2BAAsC,SAC7BM,OAAO,OAFc,kCAK/B,CAACJ,EAAaA,EAAYF,MAE7BzB,qBAAU,WACR,GAA8B,OAA1BgC,EAAcC,SAAyC,OAArBZ,EAAtC,CAIA,IAAMa,EA9DgB,SAACC,GACzB,IAAMD,EAAU9B,SAASC,cAAc,OAEjC+B,EAAchC,SAASC,cAAc,MAC3C+B,EAAYC,YAAcF,EAAMG,KAChCJ,EAAQzB,YAAY2B,GAEpB,IAAMG,EAAiBnC,SAASC,cAAc,KAI9C,OAHAkC,EAAeF,YAAcF,EAAMK,GACnCN,EAAQzB,YAAY8B,GAEbL,EAmDWO,CAAkBpB,EAAiBc,OAEnDH,EAAcC,QAAQS,WAAWR,GACjCF,EAAcC,QAAQU,KAAKlD,EAAa4B,EAAiBuB,WACxD,CAACvB,EAAkB5B,IAEtBO,qBAAU,WACR,GAAoB,OAAhBP,EAAJ,CAIA,IALc,EAKRoD,EAAa,GALL,cAOM1B,GAPN,yBAOHgB,EAPG,QAQNS,EAAS,IAAIE,OAAOC,KAAKC,OAAO,CACpCC,IAAKxD,EACLyD,SAAU,IAAIJ,OAAOC,KAAKI,OACxBhB,EAAMnB,YAAYoC,SAClBjB,EAAMnB,YAAYqC,aAItBP,OAAOC,KAAKO,MAAMC,YAAYX,EAAQ,SAAS,WAC7CtB,EAAoB,CAClBa,QACAS,cAIJC,EAAWW,KAAKZ,IAhBlB,2BAA6B,IAPf,8BA0BdhB,EAAciB,MACb,CAAC1B,EAAQ1B,IAEZ,IAAMgE,EAAYC,iBAA8B,MAC1C1B,EAAgB0B,iBAAsC,MAG5D1D,qBAAU,WACR,GACER,GACgB,OAAhBwB,GACgB,OAAhBvB,GACsB,OAAtBgE,EAAUxB,QACV,CAC8B,OAA1BD,EAAcC,UAChBD,EAAcC,QAAU,IAAIa,OAAOC,KAAKY,YAG1C,IAAMV,EAAM,IAAIH,OAAOC,KAAKlC,IAAI4C,EAAUxB,QAAS,CACjD2B,OAAQ,IAAId,OAAOC,KAAKI,OACtBnC,EAAYoC,SACZpC,EAAYqC,WAEdQ,KAAM,KAGRnE,EAAeuD,MAEhB,CAACzD,EAAgBC,EAAaC,EAAgBsB,IAEjD,IAAMI,EAA4B,OAAhBJ,EAElB,OACE,qBAAKwB,GAAG,MAAMsB,UAAS,UAAKhD,EAAMgD,UAAX,gBAAoCC,IAAKN,EAAhE,SACGrC,GAAa,gD,mCFhIRzB,O,yCAAAA,I,wCAAAA,M,uCGLNqE,EAA4B,CAChC7C,OAAQ,GACRC,WAAW,EACX6C,KAAMtE,EAASuE,mBASJC,EAASC,YACpB,gBADoC,uCAEpC,mCAAAC,EAAA,6DACErD,EADF,EACEA,YACAsD,EAFF,EAEEA,QACAC,EAHF,EAGEA,MAGMC,EAAU,CACdvD,SAAU,IAAI6B,OAAOC,KAAKI,OACxBnC,EAAYoC,SACZpC,EAAYqC,WAEdoB,QAASF,EACTG,OAlCoB,IAmCpBC,KAAM,cAbV,kBAgBS,IAAIC,SAAsB,SAACC,EAASC,GACzCR,EAAQS,aACNP,GACA,SACEQ,EACAC,GAOA,IALuB,CACrBnC,OAAOC,KAAK5B,OAAO+D,oBAAoBC,GACvCrC,OAAOC,KAAK5B,OAAO+D,oBAAoBE,cACvCC,SAASJ,GAKT,OAFAK,QAAQC,MAAR,2CAAkDN,IAE3CH,EAAO,IAAIU,MAAM,kBAG1B,IAAKR,GAA8B,IAAnBA,EAAQlD,OAGtB,OAFAwD,QAAQG,KAAR,6BAAmCR,EAAnC,iBAAkDV,IAE3CM,EAAQ,IAGjB,IAAM1D,EAAuB6D,EAAQU,QACnC,SACEC,EACAC,GAsBA,OAlBIA,EAAKC,SAAU5E,UACjB0E,EAAKnC,KAAK,CACRhB,GAAIoD,EAAKE,SACTxD,KAAMsD,EAAKtD,KACXyD,OAAQH,EAAKG,OACbC,aAAcJ,EAAKK,mBACnBC,SAAUN,EAAKO,OAAQ,GAAGC,OAAO,CAC/BC,SAAU,IACVC,UAAW,MAEbC,WAAYX,EAAKY,YACjBxF,YAAa,CACXoC,SAAUwC,EAAKC,SAAU5E,SAASwF,MAClCpD,UAAWuC,EAAKC,SAAU5E,SAASyF,SAKlCf,IAET,IAGF,OAAOd,EAAQ1D,UAtEvB,2CAFoC,uDA+EhCwF,EAAa,SAACxF,EAAsByF,GACxCzF,EAAO8C,MAAK,SAACI,EAAGwC,GACd,OAAOD,IAAajH,EAASmH,iBACzBzC,EAAE0B,OAASc,EAAEd,OACbc,EAAEd,OAAS1B,EAAE0B,WAIfgB,EAAcC,YAAY,CAC9B1E,KAAM,SACN0B,eACAiD,SAAU,CACRC,WAAY,SAACnG,GAQX,OAPAA,EAAMkD,KACJlD,EAAMkD,OAAStE,EAASmH,iBACpBnH,EAASuE,kBACTvE,EAASmH,iBAEfH,EAAW5F,EAAMI,OAAQJ,EAAMkD,MAExBlD,IAGXoG,cAAe,SAACC,GACdA,EACGC,QAAQlD,EAAOmD,SAAS,SAACvG,GACxBA,EAAMK,WAAY,KAEnBiG,QAAQlD,EAAOoD,WAAW,SAACxG,EAAOS,GACjCT,EAAMK,WAAY,EAElBuF,EAAWnF,EAAOgG,QAASzG,EAAMkD,MAEjClD,EAAMI,OAASK,EAAOgG,WAEvBH,QAAQlD,EAAOsD,UAAU,SAAC1G,EAAOS,GAChC8D,QAAQC,MAAR,qCAA4C/D,EAAOgG,UACnDzG,EAAMK,WAAY,QAKX8F,EAAeH,EAAYW,QAA3BR,WAEAH,IAAf,QCtIMY,EAAc,CAClB,CAAEC,KAAM,sBAAuB3D,KAAMtE,EAASuE,mBAC9C,CAAE0D,KAAM,sBAAuB3D,KAAMtE,EAASmH,mBAG1Ce,EAAYC,sBAAW,SAAChH,EAAmBiD,GAC/C,MAAkCjE,mBAASgB,EAAMmD,MAAjD,mBAAO8D,EAAP,KAAkBC,EAAlB,KAEA,OACE,qBAAKlE,UAAU,aAAamE,UAAW,EAAGlE,IAAKA,EAA/C,SACE,qBAAKD,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,+BACG6D,EAAY1E,KAAI,SAACiF,EAAYC,GAC5B,OACE,qBAAiBrE,UAAU,aAA3B,SACE,wBAAOA,UAAU,mBAAjB,UACE,uBACEA,UAAU,mBACVxB,KAAK,OACLqC,KAAK,QACLyD,SAAU,WACRJ,EAAaE,EAAWjE,OAE1BoE,QAASN,IAAcG,EAAWjE,OAEnCiE,EAAWN,SAXNO,UAkBlB,qBAAKrE,UAAU,eAAf,SACE,wBACEa,KAAK,SACLb,UAAU,eACV,kBAAgB,QAChBwE,QAAS,WACPxH,EAAMyH,QAAQR,IALlB,+BAsEGS,EArDF,WACX,IAAMC,EAAWvJ,IAEXwJ,EAAWC,sBACXC,EAAQlF,iBAAqB,MAC3BkD,EAAaxH,GAAe,SAAC2B,GACnC,MAAO,CACL6F,SAAU7F,EAAMI,OAAO8C,SAFnB2C,SAMR,EAA0CxH,GACxC,SAAC2B,GACC,MAAO,CACL8H,iBAAkB9H,EAAMI,OAAOC,UAC/BJ,YAAaD,EAAME,SAASD,gBAJ1B6H,EAAR,EAAQA,iBAAkB7H,EAA1B,EAA0BA,YAS1B,OACE,gCACE,wBACE8C,UAAU,+BACVa,KAAK,SACLmE,SAAUD,GAAoC,OAAhB7H,EAC9BsH,QAAS,WACkB,OAArBI,EAASzG,SAAsC,OAAlB2G,EAAM3G,UACrC2G,EAAM3G,QAAU,IAAI8G,IAAML,EAASzG,UAGf,OAAlB2G,EAAM3G,SACR2G,EAAM3G,QAAQ+G,UAVpB,kBAgBA,cAACnB,EAAD,CACE9D,IAAK2E,EACLzE,KAAM2C,EACN2B,QAAS,SAACU,GACJA,IAAgBrC,GAIpB6B,EAASvB,YCvCJgC,EAjEA,WACb,IAAMT,EAAWvJ,IAEjB,EAA0CE,GACxC,SAAC2B,GACC,MAAO,CACL8H,iBAAkB9H,EAAMI,OAAOC,UAC/BJ,YAAaD,EAAME,SAASD,gBAJ1B6H,EAAR,EAAQA,iBAAkB7H,EAA1B,EAA0BA,YAS1B,EAAwCa,qBAAWvC,GAA3CE,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,YACxB,EACEK,mBAAkD,MADpD,mBAAOwE,EAAP,KAAgB6E,EAAhB,KASA,OANAnJ,qBAAU,WACJR,GAAkC,OAAhBC,GACpB0J,EAAW,IAAIrG,OAAOC,KAAK5B,OAAOiI,cAAc3J,MAEjD,CAACD,EAAgBC,EAAauB,IAG/B,sBACEqI,SAAQ,uCAAE,WAAO/F,GAAP,mBAAAe,EAAA,yDACRf,EAAMgG,kBAEFT,EAHI,oDAOQ,OAAZvE,GAAoC,OAAhBtD,EAPhB,uBAQNuI,MAAM,iBARA,0BAaFC,EAAW,IAAIC,SAASnG,EAAMoG,QAE9BnF,EAfE,oBAeSiF,EAASG,IAAI,gBAftB,QAekC,IAE1C,IACElB,EAAStE,EAAO,CAAEG,UAAStD,cAAauD,WACxC,MAAOgB,GACPD,QAAQC,MAAR,gCAAuCA,IApBjC,2CAAF,sDADV,SAyBE,sBAAKzB,UAAU,cAAf,UACE,uBACEa,KAAK,OACLrC,KAAK,QACLwG,SAAUD,GAAoC,OAAhB7H,EAC9B8C,UAAU,eACV8F,YAAY,0BACZ,aAAW,4BAEb,wBAAQ9F,UAAU,4BAA4Ba,KAAK,SAAnD,SACE,mBAAGb,UAAU,sCCvCR+F,EArB6C,SAAC/I,GAC3D,OACE,qBACEgD,UAAS,UAAKhD,EAAMgD,UAAX,oEAAgFgG,IAAOC,KADlG,SAGE,sBAAKjG,UAAU,kBAAf,UACE,oBAAGA,UAAU,qCAAqCkG,KAAK,IAAvD,UACE,qBAAK/J,IAAI,YAAYgK,IAAI,mBAAoB,IAC7C,sBAAMnG,UAAU,YAAhB,yBAGF,sBAAKA,UAAU,SAAf,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,aChBJoG,EAAoB,YAMpBC,EAA4B,WAAO,IAAD,EACtC,OAAOC,KAAKC,MAAL,UACLC,aAAaC,QAAQL,UADhB,QACsCE,KAAKI,UAAU,MAIxDxG,EAA+B,CACnCyG,KAAMN,KAGFO,EAAiB1D,YAAY,CACjC1E,KAAM,YACN0B,eACAiD,SAAU,CACR0D,eAAgB,SAAC5J,EAAuBS,GAAmC,IAAD,EAClEoJ,EAAUpJ,EAAOgG,QAIjBqD,IADY,UAAG9J,EAAM0J,KAAKG,UAAd,UAElB7J,EAAM0J,KAAKG,GAAWC,EAGtB,IAAMC,EAAYX,IAKlB,OAJAW,EAAUF,GAAWC,EACrBP,aAAaS,QAAQb,EAAmBE,KAAKI,UAAUM,IAGhD/J,MAKE4J,EAAmBD,EAAehD,QAAlCiD,eAEAD,IAAf,QC3BaM,EAAqB5G,YAAiB,WAAD,sBAAa,sBAAAC,EAAA,+EACtD,IAAIO,SAAqB,SAACC,EAASC,GACxCmG,UAAUC,YAAYC,oBACpB,SAACjI,GACC2B,EAAQ,CACNzB,SAAUF,EAASkI,OAAOhI,SAC1BC,UAAWH,EAASkI,OAAO/H,cAG/ByB,EACA,CACEuG,oBAAoB,EACpBC,QAAS,IACTC,WAAY,QAb2C,4CAmBzDC,EAAgBxE,YAAY,CAChC1E,KAAM,WACN0B,aA3BkC,CAClCpD,MAAO,EACPQ,WAAW,EACXJ,YAAa,MAyBbiG,SAAU,CACRwE,UADQ,SACE1K,GACRA,EAAMH,SAER8K,UAJQ,SAIE3K,GACRA,EAAMH,UAGVuG,cAAe,SAACC,GACdA,EACGC,QAAQ2D,EAAmB1D,SAAS,SAACvG,EAAOS,GAC3CT,EAAMK,WAAY,KAEnBiG,QAAQ2D,EAAmBzD,WAAW,SAACxG,EAAOS,GAC7CT,EAAMK,WAAY,EAClBL,EAAMC,YAAcQ,EAAOgG,WAE5BH,QAAQ2D,EAAmBvD,UAAU,SAAC1G,EAAOS,GAC5C8D,QAAQC,MAAR,uCAA8C/D,EAAOgG,UACrDzG,EAAMK,WAAY,QAKnB,EAAiCoK,EAAc9D,QAIvC8D,GAJR,EAAQC,UAAR,EAAmBC,UAIXF,EAAf,SC3DaG,EAAQC,YAAe,CAClCC,QAAS,CACP5K,SAAU6K,EACV3K,OAAQ4K,EACRjB,UAAWkB,K,2DCyBAC,EA3BA,SAAC,GAMd,IANmD,IAAnClG,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,aAClBkG,EAAYC,KAAKC,MAAMrG,GAGvBsG,EAAW,GAERC,EAAI,EAAGA,EARC,EAQeA,IAC9BD,EAAS7I,KACP,mBACE,cAAa8I,EAAIJ,EAAY,cAAgB,aAE7CpI,UAAS,aACPwI,EAAIJ,EAAJ,UACOpC,IAAOyC,KADd,2BAEOzC,IAAO0C,MAFd,cAFGF,IAUX,OACE,uBAAMG,MAAK,UAAK1G,EAAL,gBAAX,UACGsG,EAASpJ,KAAI,SAACyJ,GAAD,OAAUA,KAD1B,KACmC1G,EADnC,QC2CW2G,EA7D0D,SACvE7L,GAEA,MAA8BhB,mBAAS,IAAvC,mBAAO8M,EAAP,KAAgBC,EAAhB,KAEMpE,EAAWvJ,IACT4N,EAAgB1N,GAAe,SAAC2B,GACtC,MAAO,CACL+L,YAAa/L,EAAM+J,UAAUL,KAAK3J,EAAMqB,MAAMK,QAF1CsK,YAcR,OARA9M,qBAAU,WACHc,EAAMqB,MAAMoE,YAIjBsG,EAAW,IAAIE,MAAMjM,EAAMqB,MAAMoE,YAAYyG,KAAK,KAAKC,KAAK,OAC3D,CAACnM,EAAMqB,MAAMoE,aAGd,qBAAKzC,UAAS,UAAKhD,EAAMgD,UAAX,qBAAiCgG,IAAOoD,MAAtD,SACE,sBAAKpJ,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEA,UAAU,MACVmG,IAAG,UAAKnJ,EAAMqB,MAAMG,MACpBrC,IAAKa,EAAMqB,MAAM+D,aAIrB,qBAAKpC,UAAU,WAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,2BAAd,SAA0ChD,EAAMqB,MAAMG,OACtD,cAAC,EAAD,CACEyD,OAAQjF,EAAMqB,MAAM4D,OACpBC,aAAclF,EAAMqB,MAAM6D,eAE3B4G,GAAW,mBAAG9I,UAAU,YAAb,SAA0B8I,SAI1C,qBAAK9I,UAAU,WAAf,SACE,wBACEA,UAAU,eACVwE,QAAS,WACPG,EAASkC,EAAe7J,EAAMqB,MAAMK,MAHxC,SAME,mBACEsB,UAAS,qBACPgJ,EAAc,QAAU,GADjB,6BChBRK,GAxC8C,SAACrM,GAC5D,MAAqC1B,GAAe,SAAC2B,GACnD,MAAO,CACL8H,iBAAkB9H,EAAMI,OAAOC,UAC/BD,OAAQJ,EAAMI,OAAOA,WAHjB0H,EAAR,EAAQA,iBAAkB1H,EAA1B,EAA0BA,OAO1B,OACE,qBAAK2C,UAAS,UAAKhD,EAAMgD,UAAX,0BAAd,SACG+E,EACC,qBAAK/E,UAAU,OAAO,cAAY,OAAlC,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,8BAAd,SACE,sBAAMA,UAAU,wBAElB,oBAAGA,UAAU,6BAAb,UACE,sBAAMA,UAAU,sBAChB,sBAAMA,UAAU,sBAChB,sBAAMA,UAAU,sBAChB,sBAAMA,UAAU,sBAChB,sBAAMA,UAAU,8BAInB+E,GAAsC,IAAlB1H,EAAOW,OAO9BX,EAAO8B,KAAI,SAACd,GAAD,OACT,cAAC,EAAD,CAAU2B,UAAU,OAAsB3B,MAAOA,GAAjBA,EAAMK,OAPxC,qBAAKsB,UAAU,OAAO,cAAY,OAAlC,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,6CCtBZ6H,EAAMlD,SAASuC,KA+CAoC,OA7Cf,WACE,MAA4CtN,oBAAS,GAArD,mBAAOuN,EAAP,KAAuBC,EAAvB,KAEA,OACE,cAAC,IAAD,CAAU3B,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,qBAAK7H,UAAU,yBAAf,SACE,sBAAKA,UAAS,0BAAqBgG,IAAOyD,WAA1C,UACE,cAAC,EAAD,CAAQzJ,UAAWgG,IAAOC,MAE1B,uBAAMjG,UAAS,UAAKgG,IAAO0D,KAAZ,0BAAf,UACE,sBAAK1J,UAAU,YAAf,UAIE,cAAC,GAAD,CACEA,UAAS,4CACNuJ,GAAkB,YAGvB,cAAC,EAAD,CACEvJ,UAAS,yBAAoBuJ,GAAkB,eAKnD,yBACEvJ,UAAU,uFACVwE,QAAS,WACPgF,GAAmBD,IAHvB,UAME,mBACEvJ,UAAS,gBAAWuJ,EAAiB,UAAY,aAElDA,EAAiB,MAAQ,uBCnC3BI,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFhO,SAASiO,eAAe,SAM1BZ,O","file":"static/js/main.8f03c9ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__38atM\",\"nav\":\"App_nav__2qex2\",\"main\":\"App_main__3N4Nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full\":\"Rating_full__nAF1e\",\"empty\":\"Rating_empty__3aT7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"NavBar_controls__3zkfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ListItem_item__opwmm\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// See https://redux-toolkit.js.org/tutorials/typescript#define-typed-hooks for\n// why we use these typed hooks rather than useDispatch, useSelector.\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createContext, useEffect, useState } from 'react';\nimport { googleApiKey } from '../config';\n\ninterface State {\n  isGoogleLoaded: boolean;\n  mapInstance: google.maps.Map | null;\n  setMapInstance(map: google.maps.Map): void;\n}\n\nexport const GoogleContext = createContext<State>({\n  isGoogleLoaded: false,\n  mapInstance: null,\n  setMapInstance: () => {},\n});\n\nfunction loadScript(src: string, callback: () => void) {\n  var script = document.createElement('script');\n  script.setAttribute('src', src);\n  script.addEventListener('load', callback);\n  document.head.appendChild(script);\n}\n\nconst GoogleProvider: React.FC = ({ children }) => {\n  const [isGoogleLoaded, setIsGoogleLoaded] = useState<boolean>(false);\n  const [mapInstance, setMapInstance] = useState<google.maps.Map | null>(null);\n\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${googleApiKey}&libraries=places`,\n      () => {\n        setIsGoogleLoaded(true);\n      },\n    );\n\n    return () => {};\n  }, []);\n\n  return (\n    <GoogleContext.Provider\n      value={{ isGoogleLoaded, mapInstance, setMapInstance }}\n    >\n      {children}\n    </GoogleContext.Provider>\n  );\n};\n\nexport default GoogleProvider;\n","export interface Place {\n  id: string;\n  name: string;\n  rating: number;\n  totalReviews: number;\n  photoUrl: string;\n  priceLevel: number;\n  coordinates: Coordinates;\n}\n\n// Serializable representation of coordinates as opposed to GeolocationCoordinates.\nexport interface Coordinates {\n  latitude: number;\n  longitude: number;\n}\n\nexport enum SortType {\n  RatingsDescending,\n  RatingsAscending,\n}\n","// This should not be committed to git.\nexport const googleApiKey = 'AIzaSyDQSd210wKX_7cz9MELkxhaEOUhFP0AkSk';\n","import { useContext, useEffect, useReducer, useRef, useState } from 'react';\nimport { useAppSelector } from '../store/hooks';\nimport { RootState } from '../store/store';\nimport { GoogleContext } from '../Google/GoogleProvider';\nimport { Place } from '../types';\n\ninterface Selection {\n  marker: google.maps.Marker;\n  place: Place;\n}\n\ninterface MarkerState {\n  old: Array<google.maps.Marker>;\n  new: Array<google.maps.Marker>;\n}\n\nconst getDetailsContent = (place: Place) => {\n  const content = document.createElement('div');\n\n  const nameElement = document.createElement('h2');\n  nameElement.textContent = place.name;\n  content.appendChild(nameElement);\n\n  const placeIdElement = document.createElement('p');\n  placeIdElement.textContent = place.id!;\n  content.appendChild(placeIdElement);\n\n  return content;\n};\n\nconst Map: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props) => {\n  const { coordinates, isLoadingPlaces, places } = useAppSelector(\n    (state: RootState) => {\n      return {\n        coordinates: state.location.coordinates,\n        isLoadingPlaces: state.places.isLoading,\n        places: state.places.places,\n      };\n    },\n  );\n\n  const [currentSelection, setCurrentSelection] = useState<Selection | null>(\n    null,\n  );\n  const [markerState, updateMarkers] = useReducer(\n    (state: MarkerState, action: any) => {\n      return {\n        old: state.new,\n        new: action,\n      };\n    },\n    { old: [], new: [] },\n  );\n\n  // Immediately clear markers when a search is performed.\n  useEffect(() => {\n    if (isLoadingPlaces) {\n      updateMarkers([]);\n    }\n  }, [isLoadingPlaces]);\n\n  const { isGoogleLoaded, mapInstance, setMapInstance } =\n    useContext(GoogleContext);\n\n  // Clear old markers as needed.\n  useEffect(() => {\n    if (markerState.old.length > 0) {\n      for (const marker of markerState.old) {\n        marker.setMap(null);\n      }\n    }\n  }, [markerState, markerState.old]);\n\n  useEffect(() => {\n    if (infoWindowRef.current === null || currentSelection === null) {\n      return;\n    }\n\n    const content = getDetailsContent(currentSelection.place);\n\n    infoWindowRef.current.setContent(content);\n    infoWindowRef.current.open(mapInstance, currentSelection.marker);\n  }, [currentSelection, mapInstance]);\n\n  useEffect(() => {\n    if (mapInstance === null) {\n      return;\n    }\n\n    const newMarkers = [];\n\n    for (const place of places) {\n      const marker = new google.maps.Marker({\n        map: mapInstance,\n        position: new google.maps.LatLng(\n          place.coordinates.latitude,\n          place.coordinates.longitude,\n        ),\n      });\n\n      google.maps.event.addListener(marker, 'click', () => {\n        setCurrentSelection({\n          place,\n          marker,\n        });\n      });\n\n      newMarkers.push(marker);\n    }\n\n    updateMarkers(newMarkers);\n  }, [places, mapInstance]);\n\n  const mapDivRef = useRef<HTMLDivElement | null>(null);\n  const infoWindowRef = useRef<google.maps.InfoWindow | null>(null);\n\n  // Set the map center\n  useEffect(() => {\n    if (\n      isGoogleLoaded &&\n      coordinates !== null &&\n      mapInstance === null &&\n      mapDivRef.current !== null\n    ) {\n      if (infoWindowRef.current === null) {\n        infoWindowRef.current = new google.maps.InfoWindow();\n      }\n\n      const map = new google.maps.Map(mapDivRef.current, {\n        center: new google.maps.LatLng(\n          coordinates.latitude,\n          coordinates.longitude,\n        ),\n        zoom: 15,\n      });\n\n      setMapInstance(map);\n    }\n  }, [isGoogleLoaded, mapInstance, setMapInstance, coordinates]);\n\n  const isLoading = coordinates === null;\n\n  return (\n    <div id=\"map\" className={`${props.className} w-100 h-100`} ref={mapDivRef}>\n      {isLoading && <div>Loading...</div>}\n    </div>\n  );\n};\n\nexport default Map;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { Coordinates, Place, SortType } from '../../types';\n\nconst MAX_RADIUS_METERS = 2000;\n\ninterface PlacesState {\n  places: Array<Place>;\n  isLoading: boolean;\n  sort: SortType;\n}\n\nconst initialState: PlacesState = {\n  places: [],\n  isLoading: false,\n  sort: SortType.RatingsDescending,\n};\n\ninterface SearchArguments {\n  service: google.maps.places.PlacesService;\n  coordinates: Coordinates;\n  query: string;\n}\n\nexport const search = createAsyncThunk(\n  'places/search',\n  async ({\n    coordinates,\n    service,\n    query,\n  }: SearchArguments): Promise<Array<Place>> => {\n    // https://developers.google.com/maps/documentation/javascript/places#place_searches\n    const request = {\n      location: new google.maps.LatLng(\n        coordinates.latitude,\n        coordinates.longitude,\n      ),\n      keyword: query,\n      radius: MAX_RADIUS_METERS,\n      type: 'restaurant',\n    };\n\n    return new Promise<Array<Place>>((resolve, reject) => {\n      service.nearbySearch(\n        request,\n        (\n          results: Array<google.maps.places.PlaceResult> | null,\n          status: google.maps.places.PlacesServiceStatus,\n        ) => {\n          const expectedStatus = [\n            google.maps.places.PlacesServiceStatus.OK,\n            google.maps.places.PlacesServiceStatus.ZERO_RESULTS,\n          ].includes(status);\n\n          if (!expectedStatus) {\n            console.error(`unexpected status when searching ${status}`);\n\n            return reject(new Error('unknown error'));\n          }\n\n          if (!results || results.length === 0) {\n            console.warn(`no results [status=${status}] for ${query}`);\n\n            return resolve([]);\n          }\n\n          const places: Array<Place> = results.reduce(\n            (\n              memo: Array<Place>,\n              next: google.maps.places.PlaceResult,\n            ): Array<Place> => {\n              // TODO WFH How often do we actually not have these fields? If\n              // Google is marking them optional I'm assuming that's realistic.\n              if (next.geometry!.location) {\n                memo.push({\n                  id: next.place_id!,\n                  name: next.name!,\n                  rating: next.rating!,\n                  totalReviews: next.user_ratings_total!,\n                  photoUrl: next.photos![0].getUrl({\n                    maxWidth: 100,\n                    maxHeight: 100,\n                  }),\n                  priceLevel: next.price_level!,\n                  coordinates: {\n                    latitude: next.geometry!.location.lat(),\n                    longitude: next.geometry!.location.lng(),\n                  },\n                });\n              }\n\n              return memo;\n            },\n            [],\n          );\n\n          return resolve(places);\n        },\n      );\n    });\n  },\n);\n\nconst sortPlaces = (places: Array<Place>, sortType: SortType) => {\n  places.sort((a, b) => {\n    return sortType === SortType.RatingsAscending\n      ? a.rating - b.rating\n      : b.rating - a.rating;\n  });\n};\n\nconst placesSlice = createSlice({\n  name: 'places',\n  initialState,\n  reducers: {\n    toggleSort: (state: PlacesState) => {\n      state.sort =\n        state.sort === SortType.RatingsAscending\n          ? SortType.RatingsDescending\n          : SortType.RatingsAscending;\n\n      sortPlaces(state.places, state.sort);\n\n      return state;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(search.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(search.fulfilled, (state, action) => {\n        state.isLoading = false;\n\n        sortPlaces(action.payload, state.sort);\n\n        state.places = action.payload;\n      })\n      .addCase(search.rejected, (state, action) => {\n        console.error(`error while getting places ${action.payload}`);\n        state.isLoading = false;\n      });\n  },\n});\n\nexport const { toggleSort } = placesSlice.actions;\n\nexport default placesSlice.reducer;\n","import { createRef, forwardRef, Ref, useRef, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { RootState } from '../store/store';\nimport { Modal } from 'bootstrap';\nimport { SortType } from '../types';\nimport { toggleSort } from '../store/slices/places';\n\ninterface ModalProps {\n  sort: SortType;\n  onApply: (sortType: SortType) => void;\n}\n\nconst sortOptions = [\n  { text: 'Ratings High to Low', sort: SortType.RatingsDescending },\n  { text: 'Ratings Low to High', sort: SortType.RatingsAscending },\n];\n\nconst ModalForm = forwardRef((props: ModalProps, ref: Ref<HTMLDivElement>) => {\n  const [selection, setSelection] = useState(props.sort);\n\n  return (\n    <div className=\"modal fade\" tabIndex={-1} ref={ref}>\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-body\">\n            <form>\n              {sortOptions.map((sortOption, index) => {\n                return (\n                  <div key={index} className=\"form-check\">\n                    <label className=\"form-check-label\">\n                      <input\n                        className=\"form-check-input\"\n                        name=\"sort\"\n                        type=\"radio\"\n                        onChange={() => {\n                          setSelection(sortOption.sort);\n                        }}\n                        checked={selection === sortOption.sort}\n                      ></input>\n                      {sortOption.text}\n                    </label>\n                  </div>\n                );\n              })}\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-link\"\n              data-bs-dismiss=\"modal\"\n              onClick={() => {\n                props.onApply(selection);\n              }}\n            >\n              Apply\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst Sort = () => {\n  const dispatch = useAppDispatch();\n\n  const modalRef = createRef<HTMLDivElement>();\n  const modal = useRef<Modal | null>(null);\n  const { sortType } = useAppSelector((state: RootState) => {\n    return {\n      sortType: state.places.sort,\n    };\n  });\n\n  const { isLoadingResults, coordinates } = useAppSelector(\n    (state: RootState) => {\n      return {\n        isLoadingResults: state.places.isLoading,\n        coordinates: state.location.coordinates,\n      };\n    },\n  );\n\n  return (\n    <div>\n      <button\n        className=\"btn btn-outline-primary me-2\"\n        type=\"button\"\n        disabled={isLoadingResults || coordinates === null}\n        onClick={() => {\n          if (modalRef.current !== null && modal.current === null) {\n            modal.current = new Modal(modalRef.current);\n          }\n\n          if (modal.current !== null) {\n            modal.current.toggle();\n          }\n        }}\n      >\n        Sort\n      </button>\n      <ModalForm\n        ref={modalRef}\n        sort={sortType}\n        onApply={(newSortType: SortType) => {\n          if (newSortType === sortType) {\n            return;\n          }\n\n          dispatch(toggleSort());\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Sort;\n","import { FormEvent, useContext, useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { RootState } from '../store/store';\nimport { GoogleContext } from '../Google/GoogleProvider';\nimport { search } from '../store/slices/places';\n\nconst Search = () => {\n  const dispatch = useAppDispatch();\n\n  const { isLoadingResults, coordinates } = useAppSelector(\n    (state: RootState) => {\n      return {\n        isLoadingResults: state.places.isLoading,\n        coordinates: state.location.coordinates,\n      };\n    },\n  );\n\n  const { isGoogleLoaded, mapInstance } = useContext(GoogleContext);\n  const [service, setService] =\n    useState<google.maps.places.PlacesService | null>(null);\n\n  useEffect(() => {\n    if (isGoogleLoaded && mapInstance !== null) {\n      setService(new google.maps.places.PlacesService(mapInstance));\n    }\n  }, [isGoogleLoaded, mapInstance, coordinates]);\n\n  return (\n    <form\n      onSubmit={async (event: FormEvent) => {\n        event.preventDefault();\n\n        if (isLoadingResults) {\n          return;\n        }\n\n        if (service === null || coordinates === null) {\n          alert('unknown error');\n\n          return;\n        }\n\n        const formData = new FormData(event.target as HTMLFormElement);\n\n        const query = `${formData.get('query') ?? ''}`;\n\n        try {\n          dispatch(search({ service, coordinates, query }));\n        } catch (error) {\n          console.error(`error while searching ${error}`);\n        }\n      }}\n    >\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          name=\"query\"\n          disabled={isLoadingResults || coordinates === null}\n          className=\"form-control\"\n          placeholder=\"Search for a restaurant\"\n          aria-label=\"Search for a restaurant\"\n        />\n        <button className=\"btn btn-outline-secondary\" type=\"button\">\n          <i className=\"bi bi-search text-primary\"></i>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Search;\n","import styles from './NavBar.module.scss';\nimport Sort from './Sort';\nimport Search from './Search';\n\nconst NavBar: React.FC<React.HTMLAttributes<HTMLElement>> = (props) => {\n  return (\n    <nav\n      className={`${props.className} navbar navbar-expand-lg navbar-light bg-white shadow-sm ${styles.nav}`}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand d-flex justify-center\" href=\"/\">\n          <img src=\"/logo.svg\" alt=\"AllTrails logo\" />{' '}\n          <span className=\"ms-2 fs-4\">at Lunch</span>\n        </a>\n\n        <div className=\"d-flex\">\n          <Sort />\n\n          <Search />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst LOCAL_STORAGE_KEY = 'favorites';\n\ninterface FavoritesState {\n  byId: { [key: string]: boolean };\n}\n\nconst loadLocalStorageFavorites = () => {\n  return JSON.parse(\n    localStorage.getItem(LOCAL_STORAGE_KEY) ?? JSON.stringify({}),\n  );\n};\n\nconst initialState: FavoritesState = {\n  byId: loadLocalStorageFavorites(),\n};\n\nconst favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    toggleFavorite: (state: FavoritesState, action: PayloadAction<string>) => {\n      const placeId = action.payload;\n\n      // Local state update.\n      const currentState = state.byId[placeId] ?? false;\n      const newState = !currentState;\n      state.byId[placeId] = newState;\n\n      // Canonical state update..\n      const favorites = loadLocalStorageFavorites();\n      favorites[placeId] = newState;\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(favorites));\n\n      // Return local state.\n      return state;\n    },\n  },\n});\n\nexport const { toggleFavorite } = favoritesSlice.actions;\n\nexport default favoritesSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { Coordinates } from '../../types';\nimport type { RootState } from '../store';\n\ninterface LocationState {\n  value: number;\n  isLoading: boolean;\n  coordinates: Coordinates | null;\n}\n\nconst initialState: LocationState = {\n  value: 0,\n  isLoading: false,\n  coordinates: null,\n};\n\nexport const getCurrentLocation = createAsyncThunk('location', async () => {\n  return new Promise<Coordinates>((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        resolve({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        } as Coordinates);\n      },\n      reject,\n      {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n      },\n    );\n  });\n});\n\nconst locationSlice = createSlice({\n  name: 'location',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.value++;\n    },\n    decrement(state) {\n      state.value--;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getCurrentLocation.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      .addCase(getCurrentLocation.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.coordinates = action.payload;\n      })\n      .addCase(getCurrentLocation.rejected, (state, action) => {\n        console.error(`error while getting location ${action.payload}`);\n        state.isLoading = false;\n      });\n  },\n});\n\nexport const { increment, decrement } = locationSlice.actions;\n\nexport const selectCount = (state: RootState) => state.location.value;\n\nexport default locationSlice.reducer;\n","// Redux Toolkit is our official, opinionated, batteries-included toolset for efficient Redux development. It is intended to be the standard way to write Redux logic, and we strongly recommend that you use it.\n// https://redux.js.org/redux-toolkit/overview\nimport { configureStore } from '@reduxjs/toolkit';\nimport favoritesReducer from './slices/favorites';\nimport locationReducer from './slices/location';\nimport placesReducer from './slices/places';\n\nexport const store = configureStore({\n  reducer: {\n    location: locationReducer,\n    places: placesReducer,\n    favorites: favoritesReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import styles from './Rating.module.scss';\n\ninterface Props {\n  rating: number;\n  totalReviews: number;\n}\n\nconst MAX_RATING = 5;\n\nconst Rating = ({ rating, totalReviews }: Props) => {\n  const fullStars = Math.floor(rating);\n\n  // Hey now, you're an...\n  const allStars = [];\n\n  for (let i = 0; i < MAX_RATING; i++) {\n    allStars.push(\n      <i\n        data-testid={i < fullStars ? 'filled-star' : 'empty-star'}\n        key={i}\n        className={`bi ${\n          i < fullStars\n            ? `${styles.full} bi-star-fill`\n            : `${styles.empty} bi-star`\n        }`}\n      ></i>,\n    );\n  }\n\n  return (\n    <span title={`${rating} star rating`}>\n      {allStars.map((star) => star)} ({totalReviews})\n    </span>\n  );\n};\n\nexport default Rating;\n","import { useEffect, useState } from 'react';\nimport styles from './ListItem.module.scss';\nimport { Place } from '../../types';\nimport Rating from './Rating';\nimport { toggleFavorite } from '../../store/slices/favorites';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { RootState } from '../../store/store';\n\ninterface Props {\n  place: Place;\n}\n\nconst ListItem: React.FC<React.HTMLAttributes<HTMLDivElement> & Props> = (\n  props,\n) => {\n  const [dollars, setDollars] = useState('');\n\n  const dispatch = useAppDispatch();\n  const { isFavorited } = useAppSelector((state: RootState) => {\n    return {\n      isFavorited: state.favorites.byId[props.place.id],\n    };\n  });\n\n  useEffect(() => {\n    if (!props.place.priceLevel) {\n      return;\n    }\n\n    setDollars(new Array(props.place.priceLevel).fill('$').join(''));\n  }, [props.place.priceLevel]);\n\n  return (\n    <div className={`${props.className} card p-3 ${styles.item}`}>\n      <div className=\"row g-0\">\n        <div className=\"col-md-4\">\n          <img\n            className=\"img\"\n            alt={`${props.place.name}`}\n            src={props.place.photoUrl}\n          />\n        </div>\n\n        <div className=\"col-md-7\">\n          <div className=\"card-body p-0\">\n            <h5 className=\"card-title text-truncate\">{props.place.name}</h5>\n            <Rating\n              rating={props.place.rating}\n              totalReviews={props.place.totalReviews}\n            />\n            {dollars && <p className=\"card-text\">{dollars}</p>}\n          </div>\n        </div>\n\n        <div className=\"col-md-1\">\n          <button\n            className=\"btn btn-link\"\n            onClick={() => {\n              dispatch(toggleFavorite(props.place.id));\n            }}\n          >\n            <i\n              className={`bi bi-heart${\n                isFavorited ? '-fill' : ''\n              } text-primary`}\n            ></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListItem;\n","import React from 'react';\nimport { useAppSelector } from '../store/hooks';\nimport { RootState } from '../store/store';\nimport { Place } from '../types';\nimport ListItem from './ListItem/ListItem';\n\nconst List: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props) => {\n  const { isLoadingResults, places } = useAppSelector((state: RootState) => {\n    return {\n      isLoadingResults: state.places.isLoading,\n      places: state.places.places,\n    };\n  });\n\n  return (\n    <div className={`${props.className} overflow-scroll h-100`}>\n      {isLoadingResults ? (\n        <div className=\"card\" aria-hidden=\"true\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title placeholder-glow\">\n              <span className=\"placeholder col-6\"></span>\n            </h5>\n            <p className=\"card-text placeholder-glow\">\n              <span className=\"placeholder col-7\"></span>\n              <span className=\"placeholder col-4\"></span>\n              <span className=\"placeholder col-4\"></span>\n              <span className=\"placeholder col-6\"></span>\n              <span className=\"placeholder col-8\"></span>\n            </p>\n          </div>\n        </div>\n      ) : !isLoadingResults && places.length === 0 ? (\n        <div className=\"card\" aria-hidden=\"true\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">No results! 😢</h5>\n          </div>\n        </div>\n      ) : (\n        places.map((place: Place) => (\n          <ListItem className=\"mb-3\" key={place.id} place={place} />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default List;\n","import { useState } from 'react';\nimport Map from '../Map/Map';\nimport NavBar from '../Navigation/NavBar';\nimport GoogleProvider from '../Google/GoogleProvider';\nimport { store } from '../store/store';\nimport { Provider } from 'react-redux';\nimport { getCurrentLocation } from '../store/slices/location';\nimport './App.scss';\nimport styles from './App.module.scss';\nimport List from '../List/List';\n\n// Immediate loading once the app is booted.\nstore.dispatch(getCurrentLocation());\n\nfunction App() {\n  const [mobileShowList, setMobileShowList] = useState(false);\n\n  return (\n    <Provider store={store}>\n      <GoogleProvider>\n        <div className=\"vw-100 vh-100 bg-light\">\n          <div className={`container h-100 ${styles.container}`}>\n            <NavBar className={styles.nav} />\n\n            <main className={`${styles.main} overflow-hidden h-100`}>\n              <div className=\"row h-100\">\n                {/* On larger viewports always show these views (d-sm-block) using\n                their column proportions, but on smaller viewports allow explicitly\n                hiding them. */}\n                <List\n                  className={`p-3 bg-light d-sm-block col-sm-4 ${\n                    !mobileShowList && 'd-none'\n                  }`}\n                />\n                <Map\n                  className={`d-sm-block col ${mobileShowList && 'd-none'}`}\n                />\n              </div>\n\n              {/* This button is only visible on mobile */}\n              <button\n                className=\"btn btn-primary d-sm-none mb-3 position-fixed start-50 fixed-bottom translate-middle\"\n                onClick={() => {\n                  setMobileShowList(!mobileShowList);\n                }}\n              >\n                <i\n                  className={`bi bi-${mobileShowList ? 'geo-alt' : 'list-ul'}`}\n                ></i>\n                {mobileShowList ? 'Map' : 'List'}\n              </button>\n            </main>\n          </div>\n        </div>\n      </GoogleProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}