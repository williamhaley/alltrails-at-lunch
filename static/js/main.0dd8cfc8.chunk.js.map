{"version":3,"sources":["App/App.module.scss","List/List.module.scss","store/hooks.ts","Google/GoogleProvider.tsx","types.ts","config.ts","store/slices/places.ts","PlaceCard/Rating.tsx","store/slices/favorites.ts","PlaceCard/Heart.tsx","PlaceCard/PlaceCard.tsx","Map/InfoWindowContent.tsx","Map/Map.tsx","Navigation/Sort.tsx","Navigation/Search.tsx","Navigation/NavBar.tsx","store/slices/location.ts","store/store.ts","List/List.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","GoogleContext","createContext","isGoogleLoaded","mapInstance","setMapInstance","SortType","PlaceCardType","GoogleProvider","children","useState","setIsGoogleLoaded","useEffect","src","callback","script","document","createElement","setAttribute","addEventListener","head","appendChild","loadScript","Provider","value","initialState","places","selectedPlace","isLoading","sort","RatingsDescending","search","createAsyncThunk","a","coordinates","service","query","request","location","google","maps","LatLng","latitude","longitude","keyword","radius","type","Promise","resolve","reject","nearbySearch","results","status","PlacesServiceStatus","OK","ZERO_RESULTS","includes","console","error","Error","length","warn","reduce","memo","next","geometry","push","id","place_id","name","rating","totalReviews","user_ratings_total","photoUrl","photos","getUrl","maxWidth","maxHeight","priceLevel","price_level","lat","lng","sortPlaces","sortType","b","RatingsAscending","placesSlice","createSlice","reducers","selectPlace","state","action","payload","toggleSort","extraReducers","builder","addCase","pending","fulfilled","newPlaces","some","place","rejected","actions","Rating","fullStars","Math","floor","allStars","i","className","title","map","star","LOCAL_STORAGE_KEY","loadLocalStorageFavorites","JSON","parse","localStorage","getItem","stringify","byId","favoritesSlice","toggleFavorite","placeId","newState","favorites","setItem","Heart","props","dispatch","isFavorited","onClick","PlaceCard","dollars","setDollars","Array","fill","join","isMapMode","style","width","height","objectFit","alt","InfoWindowContent","forwardRef","ref","Map","infoWindowContentRef","createRef","useReducer","oldByPlaceId","currentByPlaceId","markerState","updateMarkers","useContext","Object","values","setMap","infoWindowRef","current","selectedMarker","setContent","open","newMarkers","marker","Marker","position","event","addListener","mapDivRef","useRef","InfoWindow","center","zoom","sortOptions","text","ModalForm","selection","setSelection","tabIndex","sortOption","index","onChange","checked","onApply","Sort","modalRef","modal","isLoadingResults","disabled","Modal","toggle","newSortType","Search","setService","PlacesService","onSubmit","preventDefault","alert","formData","FormData","target","get","placeholder","NavBar","href","getCurrentLocation","navigator","geolocation","getCurrentPosition","coords","enableHighAccuracy","timeout","maximumAge","locationSlice","store","configureStore","reducer","locationReducer","placesReducer","favoritesReducer","List","styles","item","App","mobileShowList","setMobileShowList","container","nav","main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0dd8cfc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__38atM\",\"nav\":\"App_nav__2qex2\",\"main\":\"App_main__3N4Nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"List_item__2TG5m\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// See https://redux-toolkit.js.org/tutorials/typescript#define-typed-hooks for\n// why we use these typed hooks rather than useDispatch, useSelector.\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createContext, useEffect, useState } from 'react';\nimport { googleApiKey } from '../config';\n\ninterface State {\n  isGoogleLoaded: boolean;\n  mapInstance: google.maps.Map | null;\n  setMapInstance(map: google.maps.Map): void;\n}\n\nexport const GoogleContext = createContext<State>({\n  isGoogleLoaded: false,\n  mapInstance: null,\n  setMapInstance: () => {},\n});\n\nfunction loadScript(src: string, callback: () => void) {\n  var script = document.createElement('script');\n  script.setAttribute('src', src);\n  script.addEventListener('load', callback);\n  document.head.appendChild(script);\n}\n\nconst GoogleProvider: React.FC = ({ children }) => {\n  const [isGoogleLoaded, setIsGoogleLoaded] = useState<boolean>(false);\n  const [mapInstance, setMapInstance] = useState<google.maps.Map | null>(null);\n\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${googleApiKey}&libraries=places`,\n      () => {\n        setIsGoogleLoaded(true);\n      },\n    );\n\n    return () => {};\n  }, []);\n\n  return (\n    <GoogleContext.Provider\n      value={{ isGoogleLoaded, mapInstance, setMapInstance }}\n    >\n      {children}\n    </GoogleContext.Provider>\n  );\n};\n\nexport default GoogleProvider;\n","export interface Place {\n  id: string;\n  name: string;\n  rating: number;\n  totalReviews: number;\n  photoUrl: string;\n  priceLevel: number;\n  coordinates: Coordinates;\n}\n\n// Serializable representation of coordinates as opposed to GeolocationCoordinates.\nexport interface Coordinates {\n  latitude: number;\n  longitude: number;\n}\n\nexport enum SortType {\n  RatingsDescending,\n  RatingsAscending,\n}\n\nexport enum PlaceCardType {\n  map,\n}\n","// This should not be committed to git.\nexport const googleApiKey = 'AIzaSyDQSd210wKX_7cz9MELkxhaEOUhFP0AkSk';\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Coordinates, Place, SortType } from '../../types';\n\nconst MAX_RADIUS_METERS = 2000;\n\ninterface PlacesState {\n  places: Array<Place>;\n  selectedPlace: Place | null;\n  isLoading: boolean;\n  sort: SortType;\n}\n\nconst initialState: PlacesState = {\n  places: [],\n  selectedPlace: null,\n  isLoading: false,\n  sort: SortType.RatingsDescending,\n};\n\ninterface SearchArguments {\n  service: google.maps.places.PlacesService;\n  coordinates: Coordinates;\n  query: string;\n}\n\nexport const search = createAsyncThunk(\n  'places/search',\n  async ({\n    coordinates,\n    service,\n    query,\n  }: SearchArguments): Promise<Array<Place>> => {\n    // https://developers.google.com/maps/documentation/javascript/places#place_searches\n    const request = {\n      location: new google.maps.LatLng(\n        coordinates.latitude,\n        coordinates.longitude,\n      ),\n      keyword: query,\n      radius: MAX_RADIUS_METERS,\n      type: 'restaurant',\n    };\n\n    return new Promise<Array<Place>>((resolve, reject) => {\n      service.nearbySearch(\n        request,\n        (\n          results: Array<google.maps.places.PlaceResult> | null,\n          status: google.maps.places.PlacesServiceStatus,\n        ) => {\n          const expectedStatus = [\n            google.maps.places.PlacesServiceStatus.OK,\n            google.maps.places.PlacesServiceStatus.ZERO_RESULTS,\n          ].includes(status);\n\n          if (!expectedStatus) {\n            console.error(`unexpected status when searching ${status}`);\n\n            return reject(new Error('unknown error'));\n          }\n\n          if (!results || results.length === 0) {\n            console.warn(`no results [status=${status}] for ${query}`);\n\n            return resolve([]);\n          }\n\n          const places: Array<Place> = results.reduce(\n            (\n              memo: Array<Place>,\n              next: google.maps.places.PlaceResult,\n            ): Array<Place> => {\n              // TODO WFH How often do we actually not have these fields? If\n              // Google is marking them optional I'm assuming that's realistic.\n              if (next.geometry!.location) {\n                memo.push({\n                  id: next.place_id!,\n                  name: next.name!,\n                  rating: next.rating!,\n                  totalReviews: next.user_ratings_total!,\n                  photoUrl: next.photos![0].getUrl({\n                    maxWidth: 100,\n                    maxHeight: 100,\n                  }),\n                  priceLevel: next.price_level!,\n                  coordinates: {\n                    latitude: next.geometry!.location.lat(),\n                    longitude: next.geometry!.location.lng(),\n                  },\n                });\n              }\n\n              return memo;\n            },\n            [],\n          );\n\n          return resolve(places);\n        },\n      );\n    });\n  },\n);\n\nconst sortPlaces = (places: Array<Place>, sortType: SortType) => {\n  places.sort((a, b) => {\n    return sortType === SortType.RatingsAscending\n      ? a.rating - b.rating\n      : b.rating - a.rating;\n  });\n};\n\nconst placesSlice = createSlice({\n  name: 'places',\n  initialState,\n  reducers: {\n    selectPlace: (state: PlacesState, action: PayloadAction<Place>) => {\n      state.selectedPlace = action.payload;\n\n      return state;\n    },\n    toggleSort: (state: PlacesState) => {\n      state.sort =\n        state.sort === SortType.RatingsAscending\n          ? SortType.RatingsDescending\n          : SortType.RatingsAscending;\n\n      sortPlaces(state.places, state.sort);\n\n      return state;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(search.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(search.fulfilled, (state, action) => {\n        state.isLoading = false;\n\n        const newPlaces = action.payload;\n\n        sortPlaces(newPlaces, state.sort);\n\n        // If we had a selection, but the new results negate it, then unset it.\n        if (\n          state.selectedPlace !== null &&\n          !newPlaces.some((place) => place.id === state.selectedPlace!.id)\n        ) {\n          state.selectedPlace = null;\n        }\n\n        state.places = action.payload;\n      })\n      .addCase(search.rejected, (state, action) => {\n        console.error(`error while getting places ${action.payload}`);\n        state.isLoading = false;\n      });\n  },\n});\n\nexport const { toggleSort, selectPlace } = placesSlice.actions;\n\nexport default placesSlice.reducer;\n","interface Props {\n  rating: number;\n  totalReviews: number;\n}\n\nconst MAX_RATING = 5;\n\nconst Rating = ({ rating, totalReviews }: Props) => {\n  const fullStars = Math.floor(rating);\n\n  // Hey now, you're an...\n  const allStars = [];\n\n  for (let i = 0; i < MAX_RATING; i++) {\n    allStars.push(\n      <i\n        data-testid={i < fullStars ? 'filled-star' : 'empty-star'}\n        key={i}\n        className={`bi ${\n          i < fullStars ? `text-warning bi-star-fill` : `text-secondary bi-star`\n        }`}\n      ></i>,\n    );\n  }\n\n  return (\n    <span title={`${rating} star rating`}>\n      {allStars.map((star) => star)} ({totalReviews})\n    </span>\n  );\n};\n\nexport default Rating;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nconst LOCAL_STORAGE_KEY = 'favorites';\n\ninterface FavoritesState {\n  byId: { [key: string]: boolean };\n}\n\nconst loadLocalStorageFavorites = () => {\n  return JSON.parse(\n    localStorage.getItem(LOCAL_STORAGE_KEY) ?? JSON.stringify({}),\n  );\n};\n\nconst initialState: FavoritesState = {\n  byId: loadLocalStorageFavorites(),\n};\n\nconst favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    toggleFavorite: (state: FavoritesState, action: PayloadAction<string>) => {\n      const placeId = action.payload;\n\n      // Local state update.\n      const currentState = state.byId[placeId] ?? false;\n      const newState = !currentState;\n      state.byId[placeId] = newState;\n\n      // Canonical state update..\n      const favorites = loadLocalStorageFavorites();\n      favorites[placeId] = newState;\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(favorites));\n\n      // Return local state.\n      return state;\n    },\n  },\n});\n\nexport const { toggleFavorite } = favoritesSlice.actions;\n\nexport default favoritesSlice.reducer;\n","import { toggleFavorite } from '../store/slices/favorites';\nimport { Place } from '../types';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { RootState } from '../store/store';\n\ninterface Props {\n  place: Place;\n}\n\nconst Heart = (props: Props) => {\n  const dispatch = useAppDispatch();\n\n  const { isFavorited } = useAppSelector((state: RootState) => {\n    return {\n      isFavorited: state.favorites.byId[props.place.id],\n    };\n  });\n\n  return (\n    <button\n      className=\"btn btn-link\"\n      onClick={() => {\n        dispatch(toggleFavorite(props.place.id));\n      }}\n    >\n      <i\n        className={`bi bi-heart${isFavorited ? '-fill' : ''} text-primary`}\n      ></i>\n    </button>\n  );\n};\n\nexport default Heart;\n","import { useEffect, useState } from 'react';\nimport Rating from './Rating';\nimport { Place, PlaceCardType } from '../types';\nimport Heart from './Heart';\n\ninterface Props {\n  place: Place;\n  type?: PlaceCardType;\n}\n\nconst PlaceCard: React.FC<React.HTMLAttributes<HTMLDivElement> & Props> = (\n  props,\n) => {\n  const [dollars, setDollars] = useState('');\n\n  useEffect(() => {\n    if (!props.place.priceLevel) {\n      return;\n    }\n\n    setDollars(new Array(props.place.priceLevel).fill('$').join(''));\n  }, [props.place.priceLevel]);\n\n  const isMapMode = props.type === PlaceCardType.map;\n\n  return (\n    <div className={`${props.className} card \"d-flex flex-row`}>\n      <div className=\"d-flex align-items-center\">\n        <img\n          className=\"me-3\"\n          style={{\n            width: 64,\n            height: 64,\n            objectFit: 'cover',\n          }}\n          src={props.place.photoUrl}\n          alt={props.place.name}\n        />\n      </div>\n\n      <div className=\"card-body p-0 overflow-hidden\">\n        <div className=\"card-title mb-0 text-bold text-truncate\">\n          {props.place.name}\n        </div>\n        <Rating\n          rating={props.place.rating}\n          totalReviews={props.place.totalReviews}\n        />\n        {dollars && <div className=\"text-small\">{dollars}</div>}\n      </div>\n\n      {!isMapMode && (\n        <div className=\"d-flex align-items-start\">\n          <Heart place={props.place} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PlaceCard;\n","import { forwardRef, Ref } from 'react';\nimport PlaceCard from '../PlaceCard/PlaceCard';\nimport { Place, PlaceCardType } from '../types';\n\ninterface Props {\n  place: Place;\n}\n\nconst InfoWindowContent = forwardRef(\n  (props: Props, ref: Ref<HTMLDivElement>) => {\n    return (\n      <div ref={ref}>\n        <PlaceCard\n          place={props.place}\n          type={PlaceCardType.map}\n          className=\"border-0\"\n        />\n      </div>\n    );\n  },\n);\n\nexport default InfoWindowContent;\n","import { createRef, useContext, useEffect, useReducer, useRef } from 'react';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { RootState } from '../store/store';\nimport { GoogleContext } from '../Google/GoogleProvider';\nimport { selectPlace } from '../store/slices/places';\nimport InfoWindowContent from './InfoWindowContent';\n\ninterface MarkerState {\n  oldByPlaceId: { [key: string]: google.maps.Marker };\n  currentByPlaceId: { [key: string]: google.maps.Marker };\n}\n\nconst Map: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props) => {\n  const dispatch = useAppDispatch();\n\n  const { coordinates, places, selectedPlace } = useAppSelector(\n    (state: RootState) => {\n      return {\n        coordinates: state.location.coordinates,\n        places: state.places.places,\n        selectedPlace: state.places.selectedPlace,\n      };\n    },\n  );\n\n  const infoWindowContentRef = createRef<HTMLDivElement>();\n\n  const [markerState, updateMarkers] = useReducer(\n    (state: MarkerState, newPlaces: { [key: string]: google.maps.Marker }) => {\n      return {\n        oldByPlaceId: state.currentByPlaceId,\n        currentByPlaceId: newPlaces,\n      };\n    },\n    { oldByPlaceId: {}, currentByPlaceId: {} },\n  );\n\n  const { isGoogleLoaded, mapInstance, setMapInstance } =\n    useContext(GoogleContext);\n\n  // Clear old markers as needed.\n  useEffect(() => {\n    for (const marker of Object.values(markerState.oldByPlaceId)) {\n      marker.setMap(null);\n    }\n  }, [markerState, markerState.oldByPlaceId]);\n\n  useEffect(() => {\n    if (\n      infoWindowRef.current === null ||\n      selectedPlace === null ||\n      infoWindowContentRef.current === null\n    ) {\n      return;\n    }\n\n    const selectedMarker = markerState.currentByPlaceId[selectedPlace.id];\n\n    infoWindowRef.current.setContent(infoWindowContentRef.current);\n    infoWindowRef.current.open(mapInstance, selectedMarker);\n  }, [\n    selectedPlace,\n    places,\n    mapInstance,\n    markerState.currentByPlaceId,\n    infoWindowContentRef,\n  ]);\n\n  useEffect(() => {\n    if (mapInstance === null) {\n      return;\n    }\n\n    const newMarkers = {} as { [key: string]: google.maps.Marker };\n\n    for (const place of places) {\n      const marker = new google.maps.Marker({\n        map: mapInstance,\n        position: new google.maps.LatLng(\n          place.coordinates.latitude,\n          place.coordinates.longitude,\n        ),\n      });\n\n      google.maps.event.addListener(marker, 'click', () => {\n        dispatch(selectPlace(place));\n      });\n\n      newMarkers[place.id] = marker;\n    }\n\n    updateMarkers(newMarkers);\n  }, [dispatch, places, mapInstance]);\n\n  const mapDivRef = useRef<HTMLDivElement | null>(null);\n  const infoWindowRef = useRef<google.maps.InfoWindow | null>(null);\n\n  // Set the map center\n  useEffect(() => {\n    if (\n      isGoogleLoaded &&\n      coordinates !== null &&\n      mapInstance === null &&\n      mapDivRef.current !== null\n    ) {\n      if (infoWindowRef.current === null) {\n        infoWindowRef.current = new google.maps.InfoWindow();\n      }\n\n      const map = new google.maps.Map(mapDivRef.current, {\n        center: new google.maps.LatLng(\n          coordinates.latitude,\n          coordinates.longitude,\n        ),\n        zoom: 15,\n      });\n\n      setMapInstance(map);\n    }\n  }, [isGoogleLoaded, mapInstance, setMapInstance, coordinates]);\n\n  const isLoading = coordinates === null;\n\n  return (\n    <div id=\"map\" className={`${props.className} w-100 h-100`} ref={mapDivRef}>\n      {isLoading && <div className=\"p-2\">Loading...</div>}\n\n      {selectedPlace !== null && (\n        <InfoWindowContent ref={infoWindowContentRef} place={selectedPlace} />\n      )}\n    </div>\n  );\n};\n\nexport default Map;\n","import { createRef, forwardRef, Ref, useRef, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { RootState } from '../store/store';\nimport { Modal } from 'bootstrap';\nimport { SortType } from '../types';\nimport { toggleSort } from '../store/slices/places';\n\ninterface ModalProps {\n  sort: SortType;\n  onApply: (sortType: SortType) => void;\n}\n\nconst sortOptions = [\n  { text: 'Ratings High to Low', sort: SortType.RatingsDescending },\n  { text: 'Ratings Low to High', sort: SortType.RatingsAscending },\n];\n\nconst ModalForm = forwardRef((props: ModalProps, ref: Ref<HTMLDivElement>) => {\n  const [selection, setSelection] = useState(props.sort);\n\n  return (\n    <div className=\"modal fade\" tabIndex={-1} ref={ref}>\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-body\">\n            <form>\n              {sortOptions.map((sortOption, index) => {\n                return (\n                  <div key={index} className=\"form-check\">\n                    <label className=\"form-check-label\">\n                      <input\n                        className=\"form-check-input\"\n                        name=\"sort\"\n                        type=\"radio\"\n                        onChange={() => {\n                          setSelection(sortOption.sort);\n                        }}\n                        checked={selection === sortOption.sort}\n                      ></input>\n                      {sortOption.text}\n                    </label>\n                  </div>\n                );\n              })}\n            </form>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-link\"\n              data-bs-dismiss=\"modal\"\n              onClick={() => {\n                props.onApply(selection);\n              }}\n            >\n              Apply\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst Sort = () => {\n  const dispatch = useAppDispatch();\n\n  const modalRef = createRef<HTMLDivElement>();\n  const modal = useRef<Modal | null>(null);\n  const { sortType } = useAppSelector((state: RootState) => {\n    return {\n      sortType: state.places.sort,\n    };\n  });\n\n  const { isLoadingResults, coordinates } = useAppSelector(\n    (state: RootState) => {\n      return {\n        isLoadingResults: state.places.isLoading,\n        coordinates: state.location.coordinates,\n      };\n    },\n  );\n\n  return (\n    <div>\n      <button\n        className=\"btn btn-outline-primary me-2\"\n        type=\"button\"\n        disabled={isLoadingResults || coordinates === null}\n        onClick={() => {\n          if (modalRef.current !== null && modal.current === null) {\n            modal.current = new Modal(modalRef.current);\n          }\n\n          if (modal.current !== null) {\n            modal.current.toggle();\n          }\n        }}\n      >\n        Sort\n      </button>\n\n      <ModalForm\n        ref={modalRef}\n        sort={sortType}\n        onApply={(newSortType: SortType) => {\n          if (newSortType === sortType) {\n            return;\n          }\n\n          dispatch(toggleSort());\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Sort;\n","import { FormEvent, useContext, useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { RootState } from '../store/store';\nimport { GoogleContext } from '../Google/GoogleProvider';\nimport { search } from '../store/slices/places';\n\nconst Search = () => {\n  const dispatch = useAppDispatch();\n\n  const { isLoadingResults, coordinates } = useAppSelector(\n    (state: RootState) => {\n      return {\n        isLoadingResults: state.places.isLoading,\n        coordinates: state.location.coordinates,\n      };\n    },\n  );\n\n  const { isGoogleLoaded, mapInstance } = useContext(GoogleContext);\n  const [service, setService] =\n    useState<google.maps.places.PlacesService | null>(null);\n\n  useEffect(() => {\n    if (isGoogleLoaded && mapInstance !== null) {\n      setService(new google.maps.places.PlacesService(mapInstance));\n    }\n  }, [isGoogleLoaded, mapInstance, coordinates]);\n\n  return (\n    <form\n      onSubmit={async (event: FormEvent) => {\n        event.preventDefault();\n\n        if (isLoadingResults) {\n          return;\n        }\n\n        if (service === null || coordinates === null) {\n          alert('unknown error');\n\n          return;\n        }\n\n        const formData = new FormData(event.target as HTMLFormElement);\n\n        const query = `${formData.get('query') ?? ''}`;\n\n        try {\n          dispatch(search({ service, coordinates, query }));\n        } catch (error) {\n          console.error(`error while searching ${error}`);\n        }\n      }}\n    >\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          name=\"query\"\n          disabled={isLoadingResults || coordinates === null}\n          className=\"form-control\"\n          placeholder=\"Search for a restaurant\"\n          aria-label=\"Search for a restaurant\"\n        />\n        <button className=\"btn btn-outline-secondary\" type=\"submit\">\n          <i className=\"bi bi-search text-primary\"></i>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Search;\n","import Sort from './Sort';\nimport Search from './Search';\n\nconst NavBar: React.FC<React.HTMLAttributes<HTMLElement>> = (props) => {\n  return (\n    <nav\n      className={`${props.className} d-flex navbar navbar-expand-lg navbar-light bg-white justify-content-between shadow-sm`}\n    >\n      <div className=\"container-fluid\">\n        <a\n          className=\"navbar-brand d-flex justify-content-center justify-content-sm-start w-100\"\n          href=\"/\"\n        >\n          <img src=\"/logo.svg\" alt=\"AllTrails logo\" />{' '}\n          <span className=\"ms-2 fs-4 text-muted\">at Lunch</span>\n        </a>\n\n        <div className=\"d-flex\">\n          <Sort />\n\n          <Search />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { Coordinates } from '../../types';\nimport type { RootState } from '../store';\n\ninterface LocationState {\n  value: number;\n  isLoading: boolean;\n  coordinates: Coordinates | null;\n}\n\nconst initialState: LocationState = {\n  value: 0,\n  isLoading: false,\n  coordinates: null,\n};\n\nexport const getCurrentLocation = createAsyncThunk('location', async () => {\n  return new Promise<Coordinates>((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        resolve({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        } as Coordinates);\n      },\n      reject,\n      {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n      },\n    );\n  });\n});\n\nconst locationSlice = createSlice({\n  name: 'location',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getCurrentLocation.pending, (state, action) => {\n        state.isLoading = true;\n      })\n      .addCase(getCurrentLocation.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.coordinates = action.payload;\n      })\n      .addCase(getCurrentLocation.rejected, (state, action) => {\n        console.error(`error while getting location ${action.payload}`);\n        state.isLoading = false;\n      });\n  },\n});\n\nexport const selectCount = (state: RootState) => state.location.value;\n\nexport default locationSlice.reducer;\n","// Redux Toolkit is our official, opinionated, batteries-included toolset for efficient Redux development. It is intended to be the standard way to write Redux logic, and we strongly recommend that you use it.\n// https://redux.js.org/redux-toolkit/overview\nimport { configureStore } from '@reduxjs/toolkit';\nimport favoritesReducer from './slices/favorites';\nimport locationReducer from './slices/location';\nimport placesReducer from './slices/places';\n\nexport const store = configureStore({\n  reducer: {\n    location: locationReducer,\n    places: placesReducer,\n    favorites: favoritesReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport PlaceCard from '../PlaceCard/PlaceCard';\nimport { useAppSelector } from '../store/hooks';\nimport { RootState } from '../store/store';\nimport { Place } from '../types';\nimport styles from './List.module.scss';\n\nconst List: React.FC<React.HTMLAttributes<HTMLDivElement>> = (props) => {\n  const { isLoadingResults, places } = useAppSelector((state: RootState) => {\n    return {\n      isLoadingResults: state.places.isLoading,\n      places: state.places.places,\n    };\n  });\n\n  return (\n    <div className={`${props.className} overflow-scroll h-100`}>\n      {isLoadingResults ? (\n        <div className=\"card p-3 mx-3\" aria-hidden=\"true\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title placeholder-glow\">\n              <span className=\"placeholder col-6\"></span>\n            </h5>\n            <p className=\"card-text placeholder-glow\">\n              <span className=\"placeholder col-7\"></span>\n              <span className=\"placeholder col-4\"></span>\n              <span className=\"placeholder col-4\"></span>\n              <span className=\"placeholder col-6\"></span>\n              <span className=\"placeholder col-8\"></span>\n            </p>\n          </div>\n        </div>\n      ) : !isLoadingResults && places.length === 0 ? (\n        <div className=\"card p-3 mx-3\" aria-hidden=\"true\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">No results! 😢</h5>\n          </div>\n        </div>\n      ) : (\n        places.map((place: Place) => (\n          <PlaceCard\n            className={`mb-2 p-2 mx-2 ${styles.item}`}\n            key={place.id}\n            place={place}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default List;\n","import { useState } from 'react';\nimport Map from '../Map/Map';\nimport NavBar from '../Navigation/NavBar';\nimport GoogleProvider from '../Google/GoogleProvider';\nimport { store } from '../store/store';\nimport { Provider } from 'react-redux';\nimport { getCurrentLocation } from '../store/slices/location';\nimport './App.scss';\nimport styles from './App.module.scss';\nimport List from '../List/List';\n\n// Immediate loading once the app is booted.\nstore.dispatch(getCurrentLocation());\n\nfunction App() {\n  const [mobileShowList, setMobileShowList] = useState(false);\n\n  return (\n    <Provider store={store}>\n      <GoogleProvider>\n        <div className=\"vw-100 vh-100 bg-light\">\n          <div className={`container h-100 p-0 ${styles.container}`}>\n            <NavBar className={styles.nav} />\n\n            <main className={`${styles.main} overflow-hidden h-100`}>\n              <div className=\"row h-100\">\n                {/* On larger viewports always show these views (d-sm-block) using\n                their column proportions, but on smaller viewports allow explicitly\n                hiding them. */}\n                <List\n                  className={`p-3 bg-light d-sm-block col-sm-4 ${\n                    !mobileShowList && 'd-none'\n                  }`}\n                />\n                <Map\n                  className={`d-sm-block col ${mobileShowList && 'd-none'}`}\n                />\n              </div>\n\n              {/* This button is only visible on mobile */}\n              <button\n                className=\"btn btn-primary d-sm-none mb-3 position-fixed start-50 fixed-bottom translate-middle text-white\"\n                onClick={() => {\n                  setMobileShowList(!mobileShowList);\n                }}\n              >\n                <i\n                  className={`me-1 bi bi-${\n                    mobileShowList ? 'geo-alt' : 'list-ul'\n                  }`}\n                ></i>\n                {mobileShowList ? 'Map' : 'List'}\n              </button>\n            </main>\n          </div>\n        </div>\n      </GoogleProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}